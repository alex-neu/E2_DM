
#Область ОбработчикиОбновлений

// Обработка обновления.
// Заполняет в регистре Правила учетов видов ЭД ДО новое измерение "Организация".
Процедура ОбновитьПравилаУчетаВидовЭД() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПравилаУчетаВидовЭДДО.ВидЭД КАК ВидЭД,
		|	ПравилаУчетаВидовЭДДО.Контрагент КАК Контрагент,
		|	ПравилаУчетаВидовЭДДО.ТипЭД КАК ТипЭД,
		|	ПравилаУчетаВидовЭДДО.ВидДокумента КАК ВидДокумента,
		|	ПравилаУчетаВидовЭДДО.ВопросДеятельности КАК ВопросДеятельности,
		|	ПравилаУчетаВидовЭДДО.Ответственный КАК Ответственный,
		|	ПравилаУчетаВидовЭДДО.Папка КАК Папка,
		|	ПравилаУчетаВидовЭДДО.УдалитьТребуетсяИзвещениеОПолучении КАК УдалитьТребуетсяИзвещениеОПолучении,
		|	ПравилаУчетаВидовЭДДО.УдалитьТребуетсяОтветнаяПодпись КАК УдалитьТребуетсяОтветнаяПодпись,
		|	ПравилаУчетаВидовЭДДО.Шаблон КАК Шаблон,
		|	ПравилаУчетаВидовЭДДО.ШаблонНаименования КАК ШаблонНаименования,
		|	ПравилаУчетаВидовЭДДО.ШаблонСодержания КАК ШаблонСодержания
		|ИЗ
		|	РегистрСведений.ПравилаУчетаВидовЭДДО КАК ПравилаУчетаВидовЭДДО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УдалитьПрофилиНастроекЭДО.Организация КАК Организация
		|ИЗ
		|	Справочник.УдалитьПрофилиНастроекЭДО КАК УдалитьПрофилиНастроекЭДО
		|ГДЕ
		|	НЕ УдалитьПрофилиНастроекЭДО.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	УдалитьПрофилиНастроекЭДО.Организация";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ПравилаЗаписанные = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2].Выгрузить();
	ОрганизацииЭДО = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1].Выгрузить().ВыгрузитьКолонку("Организация");
	
	НаборЗаписей = РегистрыСведений.ПравилаУчетаВидовЭДДО.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Для Каждого Организация Из ОрганизацииЭДО Цикл
		Для Каждого ПравилоУчета Из ПравилаЗаписанные Цикл
			
			Запись = НаборЗаписей.Добавить();
			
			Запись.Организация = Организация;
			Запись.Принимать = Истина;
			
			ЗаполнитьЗначенияСвойств(Запись, ПравилоУчета);
			
		КонецЦикла;
	КонецЦикла;
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПравилаУчетаВидовЭДДО");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстИсключения =
			НСтр("ru = 'При обновлении правил учета видов ДО по причине:'")
			+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.ПравилаУчетаВидовЭДДО, ,
			ТекстИсключения);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецПопытки;
	
КонецПроцедуры

// Обработчик обновления.
// Заполняет правила отправки документов по ЭДО на основании данных регистра Правил учета видов ЭД ДО.
Процедура ЗаполнитьПравилаОтправкиДокументовЭДО() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УдалитьСоглашенияОбИспользованииЭД.Организация КАК Организация,
		|	УдалитьСоглашенияОбИспользованииЭД.Контрагент КАК Контрагент
		|ИЗ
		|	Справочник.УдалитьСоглашенияОбИспользованииЭД КАК УдалитьСоглашенияОбИспользованииЭД
		|ГДЕ
		|	НЕ УдалитьСоглашенияОбИспользованииЭД.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	УдалитьСоглашенияОбИспользованииЭД.Организация,
		|	УдалитьСоглашенияОбИспользованииЭД.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПравилаУчетаВидовЭДДО.Организация КАК Организация,
		|	ПравилаУчетаВидовЭДДО.Контрагент КАК Контрагент,
		|	ПравилаУчетаВидовЭДДО.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	РегистрСведений.ПравилаУчетаВидовЭДДО КАК ПравилаУчетаВидовЭДДО
		|
		|СГРУППИРОВАТЬ ПО
		|	ПравилаУчетаВидовЭДДО.Организация,
		|	ПравилаУчетаВидовЭДДО.Контрагент,
		|	ПравилаУчетаВидовЭДДО.ВидДокумента";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаСторонОбмена = РезультатыЗапроса[РезультатыЗапроса.Количество() - 2].Выбрать();
	ПравилаУчета = РезультатыЗапроса[РезультатыЗапроса.Количество() - 1].Выгрузить();
	
	НаборЗаписей = РегистрыСведений.НастройкиОтправкиДокументовПоЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	Пока ВыборкаСторонОбмена.Следующий() Цикл
		
		НастройкиПоУмолчанию = РегистрыСведений.НастройкиОтправкиДокументовПоЭДО.НастройкиОтправкиДокументовПоЭДО(
			ВыборкаСторонОбмена.Организация, ВыборкаСторонОбмена.Контрагент);
		
		Для Каждого Настройка Из НастройкиПоУмолчанию Цикл
			
			Запись = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(Запись, Настройка);
			Запись.Отправитель = ВыборкаСторонОбмена.Организация;
			Запись.Получатель = ВыборкаСторонОбмена.Контрагент;
			
			ОтборПравилУчета = Новый Структура;
			ОтборПравилУчета.Вставить("Организация", ВыборкаСторонОбмена.Организация);
			ОтборПравилУчета.Вставить("Контрагент", ВыборкаСторонОбмена.Контрагент);
			ОтборПравилУчета.Вставить("ВидДокумента", Настройка.ВидДокумента);
			
			СтрокиВПравилахУчета = ПравилаУчета.НайтиСтроки(ОтборПравилУчета);
			
			Если СтрокиВПравилахУчета.Количество() > 0 Тогда
				Запись.Отправлять = Истина;
			Иначе
				Запись.Отправлять = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиОтправкиДокументовПоЭДО");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстИсключения =
			НСтр("ru = 'При заполнении настроек отправки документов ПО ЭДО возникли ошибки по причине:'")
			+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.НастройкиОтправкиДокументовПоЭДО, ,
			ТекстИсключения);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти